% Generated by roxygen2 (4.0.2): do not edit by hand
\name{do}
\alias{do}
\title{\code{do} combinator}
\usage{
do(...)
}
\description{
Accepts a list of funtions to perform parsing. The last element is assumed to
be the return(ing) function
}
\details{
do : this is is the list of parsers the list will assume that the last
element is the function to be applied, based on the variables in do. This
function can also pickup "leftovers" via the argument "leftover_" which has
been reserved especially for `f`. sample usage: `do(do=list(t=natural()),
f=function(t,leftover_) {return(leftover_)}) ("123 123")`

For example, `do` can be like: do(x=item(), item(), y=item(),
function(x,y){c(x,y)}) ("abcde")
}
\examples{
do(x=item(), item(), y=item(), f = function(x,y) {c(x,y)}) ("abcdef")
do(x=item(), item, y=item(), f = function(x,y) {c(x,y)}) ("ab")
}

